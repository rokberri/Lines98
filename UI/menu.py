# Form implementation generated from reading ui file 'menu.ui'
#
# Created by: PyQt6 UI code generator 6.3.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.
import GameData
import Game
from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QMainWindow, QApplication, QPushButton, QLabel


class Ui_MainMenu(QMainWindow):
    def __init__(self):
        super().__init__()

    def init_start_page(self, OVER):
        self.OVER = OVER
        self.setObjectName("self")
        self.controller = Game.HandlerEvent
        self.resize(400, 300)
        self.centralwidget = QtWidgets.QWidget(self)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setMinimumSize(QtCore.QSize(400, 300))
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setSpacing(6)
        self.verticalLayout.setObjectName("verticalLayout")
        self.start_button = QtWidgets.QPushButton(self.centralwidget)
        self.start_button.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.start_button.sizePolicy().hasHeightForWidth())
        self.start_button.setSizePolicy(sizePolicy)

        self.start_button.setObjectName("start_button")

        self.start_button.clicked.connect(self.init_game_page)
        self.verticalLayout.addWidget(self.start_button)
        self.exit_button = QtWidgets.QPushButton(self.centralwidget)
        self.exit_button.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.exit_button.sizePolicy().hasHeightForWidth())
        self.exit_button.setSizePolicy(sizePolicy)
        self.exit_button.setObjectName("exit_button")
        self.exit_button.clicked.connect(exit)
        self.verticalLayout.addWidget(self.exit_button)
        self.gridLayout.addLayout(self.verticalLayout, 0, 0, 1, 1)
        self.setCentralWidget(self.centralwidget)

        QtCore.QMetaObject.connectSlotsByName(self)

    def init_game_page(self):
        self.setFixedSize(1000, 1000)
        self.field = QtWidgets.QWidget(self)
        self.field.setObjectName("field")
        self.gridLayout = QtWidgets.QGridLayout(self.field)
        self.gridLayout.setObjectName("gridLayout")
        self.button_list = list
        for i in range(10):
            for j in range(10):
                button = QPushButton(self.field)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
                sizePolicy.setHorizontalStretch(1)
                sizePolicy.setVerticalStretch(1)
                sizePolicy.setHeightForWidth(button.sizePolicy().hasHeightForWidth())
                button.setSizePolicy(sizePolicy)
                button.setBaseSize(QtCore.QSize(3, 3))
                button.setObjectName(f"{i, j}")
                button.clicked.connect(self.clicked_func)
                button.setText(str(GameData.FIELD.field[i][j]))
                self.gridLayout.addWidget(button, i, j, 1, 1)
        self.setCentralWidget(self.field)

        QtCore.QMetaObject.connectSlotsByName(self)

    def clicked_func(self):
        button = self.sender()
        if type(button) is not None:
            x = int(button.objectName()[1])
            y = int(button.objectName()[4])
            button.setText(str(GameData.FIELD.field[x][y]))


def start_app(OVERLORD):
    app = QApplication([])

    window = Ui_MainMenu()
    window.init_start_page(OVERLORD)
    window.show()

    app.exec()


if __name__ == '__main__':
    start_app()
